{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar atob = require( '@stdlib/string-base-atob' ); // eslint-disable-line stdlib/no-redeclare\nvar Uint8Array = require( '@stdlib/array-uint8' );\n\n\n// MAIN //\n\n/**\n* Converts a base64-encoded string to a Uint8Array.\n*\n* @param {string} str - base64-encoded string\n* @returns {(Uint8Array|null)} output array\n*\n* @example\n* var string2buffer = require( '@stdlib/buffer-from-string' );\n*\n* var str = string2buffer( 'Hello World!' ).toString( 'base64' );\n* // returns 'SGVsbG8gV29ybGQh'\n*\n* var out = base64ToUint8Array( str );\n* // returns <Uint8Array>[ 72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33 ]\n*/\nfunction base64ToUint8Array( str ) {\n\tvar bytes;\n\tvar v;\n\tvar i;\n\n\tv = atob( str );\n\tif ( v === null ) {\n\t\treturn null;\n\t}\n\tbytes = new Uint8Array( v.length );\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tbytes[ i ] = v.charCodeAt( i );\n\t}\n\treturn bytes;\n}\n\n\n// EXPORTS //\n\nmodule.exports = base64ToUint8Array;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a base64-encoded string to a Uint8Array.\n*\n* @module @stdlib/string-base-base64-to-uint8array\n*\n* @example\n* var string2buffer = require( '@stdlib/buffer-from-string' );\n* var base64ToUint8Array = require( '@stdlib/string-base-base64-to-uint8array' );\n*\n* var str = string2buffer( 'Hello World!' ).toString( 'base64' );\n* // returns 'SGVsbG8gV29ybGQh'\n*\n* var out = base64ToUint8Array( str );\n* // returns <Uint8Array>[ 72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,0BAA2B,EAC3CC,EAAa,QAAS,qBAAsB,EAoBhD,SAASC,EAAoBC,EAAM,CAClC,IAAIC,EACAC,EACAC,EAGJ,GADAD,EAAIL,EAAMG,CAAI,EACTE,IAAM,KACV,OAAO,KAGR,IADAD,EAAQ,IAAIH,EAAYI,EAAE,MAAO,EAC3BC,EAAI,EAAGA,EAAID,EAAE,OAAQC,IAC1BF,EAAOE,CAAE,EAAID,EAAE,WAAYC,CAAE,EAE9B,OAAOF,CACR,CAKAL,EAAO,QAAUG,ICxBjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "atob", "Uint8Array", "base64ToUint8Array", "str", "bytes", "v", "i", "main"]
}
