{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport atob from '@stdlib/string-base-atob'; // eslint-disable-line stdlib/no-redeclare\nimport Uint8Array from '@stdlib/array-uint8';\n\n\n// MAIN //\n\n/**\n* Converts a base64-encoded string to a Uint8Array.\n*\n* @param {string} str - base64-encoded string\n* @returns {(Uint8Array|null)} output array\n*\n* @example\n* import string2buffer from '@stdlib/buffer-from-string';\n*\n* var str = string2buffer( 'Hello World!' ).toString( 'base64' );\n* // returns 'SGVsbG8gV29ybGQh'\n*\n* var out = base64ToUint8Array( str );\n* // returns <Uint8Array>[ 72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33 ]\n*/\nfunction base64ToUint8Array( str ) {\n\tvar bytes;\n\tvar v;\n\tvar i;\n\n\tv = atob( str );\n\tif ( v === null ) {\n\t\treturn null;\n\t}\n\tbytes = new Uint8Array( v.length );\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tbytes[ i ] = v.charCodeAt( i );\n\t}\n\treturn bytes;\n}\n\n\n// EXPORTS //\n\nexport default base64ToUint8Array;\n"],"names":["base64ToUint8Array","str","bytes","v","i","atob","Uint8Array","length","charCodeAt"],"mappings":";;0KA2CA,SAASA,EAAoBC,GAC5B,IAAIC,EACAC,EACAC,EAGJ,GAAW,QADXD,EAAIE,EAAMJ,IAET,OAAO,KAGR,IADAC,EAAQ,IAAII,EAAYH,EAAEI,QACpBH,EAAI,EAAGA,EAAID,EAAEI,OAAQH,IAC1BF,EAAOE,GAAMD,EAAEK,WAAYJ,GAE5B,OAAOF,CACR"}